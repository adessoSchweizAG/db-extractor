name: CI Build
on:
  push:
  pull_request:
      types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: demo
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 3306:3306
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/org/owasp/dependency-check-data
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Prepare daily timestamp for cache
        id: date
        run: echo "::set-output name=date::$(date '+%F')"

      - name: Cache OWASP Dependency Check Data
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository/org/owasp/dependency-check-data
          key: ${{ runner.os }}-owasp-${{ steps.date.outputs.date }}
          restore-keys: |
            ${{ runner.os }}-owasp-

      - name: Maven Build
        run: mvn --batch-mode clean verify sonar:sonar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
